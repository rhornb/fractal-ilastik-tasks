# https://peps.python.org/pep-0517/
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

# https://hatch.pypa.io/latest/config/metadata/
[tool.hatch.version]
source = "vcs"

# read more about configuring hatch at:
# https://hatch.pypa.io/latest/config/build/
[tool.hatch.build.targets.wheel]
packages = ["src/ilastik_tasks"]

# Clean up the source distribution to avoid big tag.gz files
[tool.hatch.build.targets.sdist]
exclude = [
    # Pixi lock excluded by default see https://github.com/fractal-analytics-platform/fractal-server/issues/2624
    "pixi.lock",
    # Exclude tests from the source distribution
    "tests",
    # Exclude typically large files and directories that are not needed
    # This might not exists or be named differently in your project
    # TBD if we want to include these or not
    "docs",
    "data",
    "examples",
    "notebooks",
    ".github",
    # Remove all jupyter notebook and checkpoints
    "**/*.ipynb_checkpoints",
    "**/*.ipynb",
    # NB all things in .gitignore are excluded by default of hatchling
]


# Project metadata (see https://peps.python.org/pep-0621)
[project]
name = "ilastik-tasks"
dynamic = ["version"]
description = "Collection of Fractal task to run Headless ilastik workflows"
readme = "README.md"
license = { text = "BSD-3-Clause" }
authors = [{ name = "Lorenzo Cerrone", email = "lorenzo.cerrone@uzh.ch" }]

# Required Python version and dependencies
requires-python = ">=3.11"
dependencies = []

# Optional dependencies (e.g. for `pip install -e ".[dev]"`, see
# https://peps.python.org/pep-0621/#dependencies-optional-dependencies)
[project.optional-dependencies]
dev = [
    "devtools",
    "notebook",
    "pooch",
    "hatch",
    "pytest",
    "requests",
    "jsonschema",
    "ruff",
    "pre-commit",
]

# https://docs.astral.sh/ruff
[tool.ruff]
line-length = 88
target-version = "py39"
src = ["src"]

# https://docs.astral.sh/ruff/rules
[tool.ruff.lint]
pydocstyle = { convention = "google" }
select = [
    "E",    # style errors
    "W",    # style warnings
    "F",    # flakes
    "D",    # pydocstyle
    "D417", # Missing argument descriptions in Docstrings
    "I",    # isort
    "UP",   # pyupgrade
    "C4",   # flake8-comprehensions
    "B",    # flake8-bugbear
    "A001", # flake8-builtins
    "RUF",  # ruff-specific rules
    "TCH",  # flake8-type-checking
    "TID",  # flake8-tidy-imports
]
ignore = [
    "D401", # First line should be in imperative mood (remove to opt in)
    "D415", # First line should end with a period (remove to opt in)
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D", "S"]

# https://docs.astral.sh/ruff/formatter/
[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 89
skip-magic-trailing-comma = false # default is false

[tool.pixi.workspace]
channels = ["conda-forge", "ilastik-forge"]
platforms = ["osx-arm64", "linux-64"]

[tool.pixi.pypi-dependencies]
ilastik-tasks = { path = ".", editable = true }

[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = ["dev"], solve-group = "default" }

[tool.pixi.tasks]

[tool.pixi.dependencies]
pydantic = "==2.8.2"
docstring_parser = "==0.15"
ilastik-core = ">=1.4.2a1,<2"
vigra = ">=1.12.1,<2"
fractal-tasks-core = "==1.5.3"
fractal-task-tools = "==0.0.12"
