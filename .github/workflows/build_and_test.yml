name: CI (build and test)

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
  workflow_dispatch:
  release:
    types: [published]


jobs:
  tests:
    strategy:
      matrix:
        #os: [ubuntu-22.04, macos-latest]
        os: [macos-latest]
        python-version: ["3.9"]
    name: "Core, Python ${{ matrix.python-version }}, ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - uses: mamba-org/setup-micromamba@v1
        with:
          micromamba-version: '1.5.6-0' # any version from https://github.com/mamba-org/micromamba-releases
          environment-name: 'ilastik-tasks'
          create-args: >-
            --override-channels
            -c pytorch
            -c ilastik-forge 
            -c conda-forge python=${{ matrix.python-version }} ilastik 
            --no-channel-priority

          post-cleanup: 'all'

      - name: Install package
        run: micromamba run -n ilastik-tasks python -m pip install -e .[dev]

      - name: Regenerate the manifest
        run: micromamba run -n ilastik-tasks python src/ilastik_tasks/dev/create_manifest.py

      - name: Check if manifest has changed
        run: |
          if [ -n "$(git diff --exit-code ./src/ilastik_tasks/__FRACTAL_MANIFEST__.json)" ]; then
          echo "__FRACTAL_MANIFEST__.json has changed. Please run 'python src/ilastik_tasks/dev/create_manifest.py' and commit the changes."
            exit 1
          else
            echo "__FRACTAL_MANIFEST__.json has not changed."
          fi

      - name: Test core library with pytest
        run: micromamba run -n ilastik-tasks python -m pytest tests
  
  deploy:
    name: Deploy
    needs: tests
    if: success() && startsWith(github.ref, 'refs/tags/') && github.event_name != 'schedule'
    runs-on: ubuntu-latest

    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing on PyPi
      # see https://docs.pypi.org/trusted-publishers/
      id-token: write
      # This permission allows writing releases
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: üë∑ Build
        run: |
          python -m pip install build
          python -m build

      - name: üö¢ Publish to PyPI
        # TODO remove the "if: false" line when the package is ready for pypi release
        if: false
        uses: pypa/gh-action-pypi-publish@release/v1

      - uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: './dist/*'
